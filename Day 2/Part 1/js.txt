var content = document.getElementsByTagName("body")[0].getElementsByTagName("pre")[0].innerHTML;
var lineBreakerRegex = new RegExp(/.*(?=\n)/g); //Lookahead to ignore the newline
var dimensionBreakerRegex = new RegExp(/(\d{1,3})x(\d{1,3})x(\d{1,3})/);
var dimensionsOfPresents = content.match(lineBreakerRegex);
var totalAmountOfNeededFeet = 0;
var regexCounter = 0;

for(var presentDimensionsIndex in dimensionsOfPresents) {
    var presentDimensions = dimensionsOfPresents[presentDimensionsIndex];
    if(dimensionBreakerRegex.test(presentDimensions)) {
        regexCounter++;
        var dimensionBreakResult = presentDimensions.match(dimensionBreakerRegex);
        var dimensions = { //length l, width w, and height h
            "l" : dimensionBreakResult[1],
            "w"  : dimensionBreakResult[2],
            "h" : dimensionBreakResult[3]
        }
        
        totalAmountOfNeededFeet += calculateSquareArea(dimensions);
    }
}

function calculateSquareArea(dimensionArray) {
    var squareAreaLW = 2 * dimensionArray.l * dimensionArray.w;
    var squareAreaWH = 2 * dimensionArray.w * dimensionArray.h;
    var squareAreaHL = 2 * dimensionArray.h * dimensionArray.l;
    
    var squareArea = squareAreaLW + squareAreaWH + squareAreaHL;
    
    return squareArea + getSmallestNumberInObject([squareAreaLW, squareAreaWH, squareAreaHL])/2;
}

function getSmallestNumberInObject(object) {
    var smallestNumber = undefined;
    
    for(var objectIndex in object) {
        objectContent = object[objectIndex];
        
        if(smallestNumber === undefined || smallestNumber > objectContent) {
            smallestNumber = objectContent;
        }
    }
    
    return smallestNumber;
}

console.log(totalAmountOfNeededFeet);